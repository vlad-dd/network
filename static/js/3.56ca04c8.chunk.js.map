{"version":3,"sources":["components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogsInputForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["Dialog","props","className","to","id","name","src","img","alt","Message","text","maxLength","maxLengthThunkCreator","minLength","minLengthThunkCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","TextArea","validate","requiredFields","MainFieldComponent","messageData","addNewDialog","message","console","log","Dialogs","DialogsElements","DialogsData","map","el","MessageElements","MessageData","messageEl","withAuthRedirect","compose","connect","state","dialogsPage","newDialogText","dispatch","newMessage","AddDialogActionCreator"],"mappings":"wNAYiBA,EAVF,SAACC,GACZ,OACE,8BACG,sBAAKC,UAAWD,EAAMC,UAAtB,UACE,cAAC,IAAD,CAASC,GAAI,YAAaF,EAAMG,GAAhC,SAAqCH,EAAMI,OAC3C,qBAAKC,IAAKL,EAAMM,IAAKL,UAAU,WAAWM,IAAI,mBCI1CC,G,OATC,SAACR,GACb,OACI,8BACI,qBAAKC,UAAU,UAAf,SAA0BD,EAAMS,W,8CCAxCC,EAAYC,YAAsB,KAClCC,EAAYC,YAAsB,GAkBlCC,EAAmBC,YAAW,CAC9BC,KAAM,WADaD,EAhBE,SAACf,GACtB,OACI,8BACI,uBAAMiB,SAAYjB,EAAMkB,aAAxB,UACI,8BACA,cAACC,EAAA,EAAD,CAAOC,YAAa,qBAAsBhB,KAAM,UAAWiB,UAAWC,IACtEC,SAAY,CAACC,IAAgBd,EAAWE,OAExC,8BACI,oDAwBLa,EAZU,SAACzB,GAKtB,OACI,8BACI,cAACc,EAAD,CAAkBG,SANX,SAACS,GACZ1B,EAAM2B,aAAaD,EAAYE,SAC/BC,QAAQC,IAAIJ,EAAYE,eCEjBG,EAzBC,SAAC/B,GAEf,IAAIgC,EAAkBhC,EAAMiC,YAAYC,KAAI,SAACC,GAC3C,OAAQ,cAAC,EAAD,CAAQlC,UAAU,SAASE,GAAIgC,EAAGhC,GAAIC,KAAM+B,EAAG/B,KAAME,IAAK6B,EAAG7B,KAAU6B,EAAGhC,OAGhFiC,EAAkBpC,EAAMqC,YAAYH,KAAI,SAACI,GAC3C,OAAO,cAAC,EAAD,CAAS7B,KAAM6B,EAAU7B,MAAW6B,EAAUnC,OAGvD,OACE,sBAAKF,UAAU,UAAf,UACE,qBAAKA,UAAU,gBAAf,SACG+B,IAEH,sBAAK/B,UAAU,WAAf,UACGmC,EACD,cAAC,EAAD,CAAoBT,aAAgB3B,EAAM2B,sB,wBCjBzBY,YAAiBR,GA+B3BS,sBAAQC,aA7BD,SAACC,GACrB,MAAO,CACLT,YAAaS,EAAMC,YAAYV,YAC/BI,YAAaK,EAAMC,YAAYN,YAC/BO,cAAeF,EAAMC,YAAYC,kBAIZ,SAACC,GACxB,MAAO,CACLlB,aAAc,SAACmB,GACbD,EAASE,YAAuBD,SAkB8BP,IAArDC,CAAuET","file":"static/js/3.56ca04c8.chunk.js","sourcesContent":["import '../../../styles/Dialog.css';\nimport { NavLink } from \"react-router-dom\";\nconst Dialog = (props) => {\n    return(\n      <div>\n         <div className={props.className}>\n           <NavLink to={\"/dialogs/\"+ props.id}>{props.name}</NavLink>\n           <img src={props.img} className=\"user_img\" alt='user_img'/></div>\n      </div>\n    )\n  }\n\n  export default Dialog;","import '../../../styles/Message.css';\n\nconst Message = (props) => {\n    return(\n        <div>\n            <div className=\"message\">{props.text}</div>\n        </div>\n\n    )\n}\n\nexport default Message;","import { Field, reduxForm } from \"redux-form\";\nimport { TextArea } from \"../Common/FormsControl/formsConrols\";\nimport { maxLengthThunkCreator, requiredFields } from \"../../validators/validators\";\nimport { minLengthThunkCreator } from \"../../validators/validators\";\n\nlet maxLength = maxLengthThunkCreator(100);\nlet minLength = minLengthThunkCreator(3)\n\nconst DialogsInputForm = (props) => {\n    return (\n        <div>\n            <form onSubmit = {props.handleSubmit}>\n                <div>\n                <Field placeholder={'Enter your message'} name={'message'} component={TextArea}\n                validate = {[requiredFields, maxLength, minLength]} />\n                </div>\n                <div>\n                    <button>Send</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nlet DialogsReduxForm = reduxForm( {\n    form: 'message'\n} )(DialogsInputForm);\n\n\nlet MainFieldComponent = (props) => {\n    let onSubmit = (messageData) => {\n        props.addNewDialog(messageData.message);\n        console.log(messageData.message)\n    }\n    return (\n        <div>\n            <DialogsReduxForm onSubmit = {onSubmit}/>\n        </div>\n    )\n}\n\nexport default MainFieldComponent;","import \"../../styles/Dialogs.css\";\nimport Dialog from \"./Dialog/Dialog\";\nimport Message from \"./Message/Message\";\nimport React from \"react\";\nimport Login from \"../Login/Login\";\nimport { Redirect } from \"react-router\";\nimport MainFieldComponent from \"./DialogsInputForm\";\n\n\nconst Dialogs = (props) => {\n  \n  let DialogsElements = props.DialogsData.map((el) => {\n    return (<Dialog className='dialog' id={el.id} name={el.name} img={el.img} key={el.id}/>);\n  })\n  \n  let MessageElements = props.MessageData.map((messageEl) => {\n    return(<Message text={messageEl.text} key={messageEl.id}/>)\n  });\n\n  return (\n    <div className=\"dialogs\">\n      <div className=\"dialogs_items\">\n        {DialogsElements }\n      </div>\n      <div className=\"messages\">\n        {MessageElements}\n        <MainFieldComponent addNewDialog = {props.addNewDialog}/>\n        {/* <textarea onChange= {ChangeDialogFunc} value={props.newDialogText} ref={newDialogOne}></textarea>\n       <div><button onClick = {addDialog}>Add message</button></div> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Dialogs;\n","import \"../../styles/Dialogs.css\";\nimport { AddDialogActionCreator } from \"../redux/DialogsPRed\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport {withAuthRedirect} from '../../hok/withAuthRedirect';\nimport { compose } from \"redux\";\n\n\nlet authRedirectDialog = withAuthRedirect(Dialogs)\n\nlet mapStateToProps = (state) => {\n  return {\n    DialogsData: state.dialogsPage.DialogsData,\n    MessageData: state.dialogsPage.MessageData,\n    newDialogText: state.dialogsPage.newDialogText,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addNewDialog: (newMessage) => {\n      dispatch(AddDialogActionCreator(newMessage));\n    },\n  };\n};\n\n\n\n\n// const authRedirectDialogs = (props) => {\n//   if (props.auth) {\n//     return <Redirect to = '/login'/>\n//   }\n//   return <Dialogs {...props}/>\n// }\n\n\n\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps),withAuthRedirect)(Dialogs);\n"],"sourceRoot":""}